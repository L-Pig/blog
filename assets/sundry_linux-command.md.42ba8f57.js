import{_ as l,o as e,c as i,V as o}from"./chunks/framework.2956d6af.js";const f=JSON.parse('{"title":"Linux常用指令","description":"","frontmatter":{},"headers":[],"relativePath":"sundry/linux-command.md","filePath":"sundry/linux-command.md","lastUpdated":1686327858000}'),a={name:"sundry/linux-command.md"},t=o('<h1 id="linux常用指令" tabindex="-1">Linux常用指令 <a class="header-anchor" href="#linux常用指令" aria-label="Permalink to &quot;Linux常用指令&quot;">​</a></h1><h2 id="ssh" tabindex="-1"><strong><code>ssh</code></strong> <a class="header-anchor" href="#ssh" aria-label="Permalink to &quot;**`ssh`**&quot;">​</a></h2><p><code>ssh username@hostname/ip</code> 使用username用户连接指定hostname/ip的服务器</p><h2 id="ls-列出有关文件的信息-默认为当前目录" tabindex="-1"><strong><code>ls</code> 列出有关文件的信息(默认为当前目录)</strong> <a class="header-anchor" href="#ls-列出有关文件的信息-默认为当前目录" aria-label="Permalink to &quot;**`ls` 列出有关文件的信息(默认为当前目录)**&quot;">​</a></h2><p><code>ls [参数] [文件]</code></p><ul><li>-a，-all 显示当前目录下的目录名和文件名(包括隐藏文件以及&#39;.&#39;、&#39;..&#39;)</li><li>-A，--almost-all 显示当前目录下的目录名和文件名(除了&#39;.&#39;、&#39;..&#39;)</li><li><pre><code>--author 与 -l 一起使用,列出每个文件的作者  \n</code></pre></li><li>-l 显示文件的详细信息,权限,所属用户(组),大小等,等同于 ll 命令</li></ul><h2 id="tail-命令可用于查看文件的内容" tabindex="-1"><strong><code>tail</code> 命令可用于查看文件的内容</strong> <a class="header-anchor" href="#tail-命令可用于查看文件的内容" aria-label="Permalink to &quot;**`tail` 命令可用于查看文件的内容**&quot;">​</a></h2><p><code>tail [参数] [文件] </code></p><ul><li>-f filename 循环读取文件内容,可用于日志观看(正在改变内容的日志)</li><li>-q 不显示处理信息</li><li>-v 显示详细的处理信息</li><li>-c&lt;数目&gt; 显示的字节数</li><li>-n&lt;行数&gt; 显示文件的尾部 n 行内容</li><li>--pid=PID 与-f合用,表示在进程ID,PID死掉之后结束</li><li>-q，--quiet, --silent 从不输出给出文件名的首部</li><li>-s，--sleep-interval=S 与-f合用,表示在每次反复的间隔休眠S秒</li></ul><h2 id="less-与-more-类似-less-可以随意浏览文件-支持翻页和搜索-支持向上翻页和向下翻页。" tabindex="-1"><strong><code>less</code></strong>, 与 more 类似，less 可以随意浏览文件,支持翻页和搜索,支持向上翻页和向下翻页。 <a class="header-anchor" href="#less-与-more-类似-less-可以随意浏览文件-支持翻页和搜索-支持向上翻页和向下翻页。" aria-label="Permalink to &quot;**`less`**, 与 more 类似，less 可以随意浏览文件,支持翻页和搜索,支持向上翻页和向下翻页。&quot;">​</a></h2><p><code>less [参数] 文件 </code></p><ul><li>-b &lt;缓冲区大小&gt; 设置缓冲区的大小</li><li>-e 当文件显示结束后，自动离开</li><li>-f 强迫打开特殊文件，例如外围设备代号、目录和二进制文件</li><li>-g 只标志最后搜索的关键词</li><li>-i 忽略搜索时的大小写</li><li>-m 显示类似more命令的百分比</li><li>-N 显示每行的行号</li><li>-o &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来</li><li>-Q 不使用警告音</li><li>-s 显示连续空行为一行</li><li>-S 行过长时间将超出部分舍弃</li><li>-x &lt;数字&gt; 将&quot;tab&quot;键显示为规定的数字空格</li><li>/字符串 向下搜索&quot;字符串&quot;的功能</li><li>?字符串 向上搜索&quot;字符串&quot;的功能</li><li>n 重复前一个搜索（与 / 或 ? 有关）</li><li>N 反向重复前一个搜索（与 / 或 ? 有关）</li><li>b 向上翻一页</li><li>d 向后翻半页</li><li>h 显示帮助界面</li><li>Q 退出less 命令</li><li>u 向前滚动半页</li><li>y 向前滚动一行</li><li>G 跳转到文件最后一行</li><li>g 跳转到文件第一行</li><li>v 使用配置的编辑器编辑当前文件</li><li>j 下一行</li><li>k 上一行</li><li>空格键 滚动一页</li><li>回车键 滚动一行</li><li>[pagedown] 向下翻动一页</li><li>[pageup] 向上翻动一页</li><li>&amp;pattern 仅显示匹配模式的行，而不是整个文件</li><li>ctrl + F 向前移动一屏</li><li>ctrl + B 向后移动一屏</li><li>ctrl + D 向前移动半屏</li><li>ctrl + U 向后移动半屏</li></ul><h2 id="centos-防火墙" tabindex="-1"><strong>Centos 防火墙</strong> <a class="header-anchor" href="#centos-防火墙" aria-label="Permalink to &quot;**Centos 防火墙**&quot;">​</a></h2><h3 id="_1-查看防火墙状态" tabindex="-1">1. 查看防火墙状态 <a class="header-anchor" href="#_1-查看防火墙状态" aria-label="Permalink to &quot;1. 查看防火墙状态&quot;">​</a></h3><ul><li>查看防火墙状态：<code>systemctl status firewalld</code></li><li>开启防火墙：<code>systemctl start firewalld</code></li><li>关闭防火墙：<code>systemctl stop firewalld</code></li><li>禁用防火墙：<code>systemctl disable firewalld</code></li><li>启用防火墙：<code>systemctl enable firewalld</code></li><li>开启防火墙：<code>service firewalld start</code></li></ul><blockquote><p>若遇到无法开启 先用：<code>systemctl unmask firewalld.service</code> 然后：<code>systemctl start firewalld.service</code></p></blockquote><h3 id="_2-查看对外开放的端口状态" tabindex="-1">2. 查看对外开放的端口状态 <a class="header-anchor" href="#_2-查看对外开放的端口状态" aria-label="Permalink to &quot;2. 查看对外开放的端口状态&quot;">​</a></h3><ul><li>查看开放了哪些服务端口：<code>firewall-cmd --list-all</code></li><li>查询指定端口是否已开：<code>firewall-cmd --query-port=【port】/tcp</code> ，提示 <code>yes</code>，表示开启；<code>no</code>表示未开启。</li><li>对外开发端口查看想开的端口是否已开：<code>firewall-cmd --query-port=【port】/tcp</code></li></ul><h3 id="_3-添加-删除开放的端口" tabindex="-1">3. 添加/删除开放的端口 <a class="header-anchor" href="#_3-添加-删除开放的端口" aria-label="Permalink to &quot;3. 添加/删除开放的端口&quot;">​</a></h3><ul><li>添加指定需要开放的端口：<code>firewall-cmd --add-port=【port】/tcp --permanent</code></li><li>移除指定端口：<code>firewall-cmd --permanent --remove-port=【port】/tcp</code></li></ul><blockquote><p>添加/删除完毕之后要执行<code>firewall-cmd --reload</code> 指令让配置立即生效</p></blockquote><h2 id="centos-关闭selinux" tabindex="-1"><strong>Centos 关闭SeLinux</strong> <a class="header-anchor" href="#centos-关闭selinux" aria-label="Permalink to &quot;**Centos 关闭SeLinux**&quot;">​</a></h2><h3 id="关闭selinux" tabindex="-1">关闭SeLinux： <a class="header-anchor" href="#关闭selinux" aria-label="Permalink to &quot;关闭SeLinux：&quot;">​</a></h3><ol><li>临时关闭（不用重启机器）： <ul><li><code>setenforce 0 ##设置SELinux 成为permissive模式</code></li><li><code>##setenforce 1 设置SELinux 成为enforcing模式</code></li></ul></li><li>修改配置文件需要重启机器： <ul><li>修改<code>/etc/selinux/config</code>文件</li><li>将<code>SELINUX=enforcing</code>改为<code>SELINUX=disabled</code></li><li>重启机器即可</li></ul></li></ol><h3 id="执行以下指令" tabindex="-1">执行以下指令 <a class="header-anchor" href="#执行以下指令" aria-label="Permalink to &quot;执行以下指令&quot;">​</a></h3><p><code>setsebool -P httpd_can_network_connect 1</code></p>',26),s=[t];function c(r,d,n,u,h,m){return e(),i("div",null,s)}const q=l(a,[["render",c]]);export{f as __pageData,q as default};
